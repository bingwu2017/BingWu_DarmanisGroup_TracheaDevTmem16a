load("/Volumes/GoogleDrive/My Drive/research/Mu_He/10Xsequencing/wt/seuratE15E16P1P4_wt.RData")
load("/Volumes/GoogleDrive/My Drive/research/Mu_He/10Xsequencing/wt/seuratE15E16P1P4_wt_nonShh.RData")
length(seurat_E15E16P1P4_wt@var.genes)
length(E15E16P1P4_wt_nonShh@var.genes)
union(E15E16P1P4_wt_nonShh@var.genes,seurat_E15E16P1P4_wt@var.genes)
length(union(E15E16P1P4_wt_nonShh@var.genes,seurat_E15E16P1P4_wt@var.genes))
?FindVariableGenes
library(biomaRt)
musGenes <- c("Hmmr", "Tlx3", "Cpeb4","Kdr")
# Basic function to convert mouse to human gene names
convertMouseGeneList <- function(x){
#require("biomaRt")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl")
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl")
genesV2 = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = x , mart = mouse, attributesL = c("hgnc_symbol"), martL = human, uniqueRows=T)
humanx <- unique(genesV2[, 2])
# Print the first 6 genes found to the screen
print(head(humanx))
return(humanx)
}
convertMouseGeneList(musGenes)
# Basic function to convert mouse to human gene names
convertMouseGeneList <- function(x){
#require("biomaRt")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl")
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl")
genesV2 = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = x , mart = mouse, attributesL = c("hgnc_symbol"), martL = human, uniqueRows=T)
humanx <- unique(genesV2[, 2])
# Print the first 6 genes found to the screen
#print(head(humanx))
return(humanx)
}
musGenes <- c("Hmmr", "Tlx3", "Cpeb4","Kdr","Trp63")
convertMouseGeneList(musGenes)
genesV2 = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = musGenes , mart = mouse, attributesL = c("hgnc_symbol"), martL = human, uniqueRows=T)
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl")
#require("biomaRt")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl")
genesV2 = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = musGenes , mart = mouse, attributesL = c("hgnc_symbol"), martL = human, uniqueRows=T)
genesV2
mm10_1_2_0<-read.csv(file="geneList_mm10.1.2.0.txt",sep="\t",header = T)
View(mm10_1_2_0)
m2h_output = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = mm10_1_2_0 , mart = mouse, attributesL = c("hgnc_symbol"), martL = human, uniqueRows=T)
m2h_output = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = as.vector(mm10_1_2_0) , mart = mouse, attributesL = c("hgnc_symbol"), martL = human, uniqueRows=T)
mm10_1_2_0<-as.vector(mm10_1_2_0)
mm10_1_2_0<-unlist(mm10_1_2_0)
mm10_1_2_0<-read.csv(file="geneList_mm10.1.2.0.txt",sep="\t",header = T)
colnames(mm10_1_2_0)<-NULL
mm10_1_2_0<-read.csv(file="geneList_mm10.1.2.0.txt",sep="\t",header = T,stringsAsFactors = F)
colnames(mm10_1_2_0)<-NULL
mm10_1_2_0<-unlist(mm10_1_2_0)
m2h_output = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = mm10_1_2_0 , mart = mouse, attributesL = c("hgnc_symbol"), martL = human, uniqueRows=T)
write.table(m2h_output,file="mm10.1.2.0toHuman.txt")
m2h_output_Funique = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = mm10_1_2_0 , mart = mouse, attributesL = c("hgnc_symbol"), martL = human, uniqueRows=F)
write.table(m2h_output_Funique,file="mm10.1.2.0toHuman_nonunique.txt")
library(dplyr)
anti_join(m2h_output_Funique,m2h_output)
anti_join(m2h_output,m2h_output_Funique)
anti_join(m2h_output,m2h_output_Funique,by="MGI.symbol")
anti_join(m2h_output,m2h_output_Funique,by="MGI.symbol")
length(unique(m2h_output$MGI.symbol))
length(unique(m2h_output$HGNC.symbol))
length(unique(paste0(m2h_output$MGI.symbol,m2h_output$HGNC.symbol)))
length(unique(paste0(m2h_output_Funique$MGI.symbol,m2h_output_Funique$HGNC.symbol)))
setdiff(m2h_output$MGI.symbol,mm10_1_2_0)
setdiff(mm10_1_2_0,m2h_output$MGI.symbol)
length(unique(paste0(m2h_output$MGI.symbol,m2h_output$HGNC.symbol)))
length(unique(paste0(m2h_output_Funique$MGI.symbol,m2h_output_Funique$HGNC.symbol)))
length(unique(paste0(m2h_output$MGI.symbol,m2h_output$HGNC.symbol)))
length(unique(m2h_output_Funique$MGI.symbol))
length(unique(m2h_output$MGI.symbol))
length(unique(m2h_output$HGNC.symbol))
length(unique(m2h_output_Funique$HGNC.symbol))
length(unique(m2h_output$HGNC.symbol))
m2h_output[duplicated(m2h_output$HGNC.symbol),]
sort(m2h_output[duplicated(m2h_output$HGNC.symbol),])
duplicated_human<-m2h_output[duplicated(m2h_output$HGNC.symbol),]
duplicated_human[order(duplicated_human$HGNC.symbol)]
duplicated_human[order(duplicated_human$HGNC.symbol),]
duplicated_mouse<-m2h_output[duplicated(m2h_output$MGI.symbol),]
duplicated_mouse[order(duplicated_mouse$MGI.symbol),]
m2h_output[m2h_output$MGI.symbol=="Cbs",]
?duplicated
duplicated_human<-m2h_output[m2h_output$HGNC.symbol %in% duplicated(m2h_output$HGNC.symbol),]
duplicated_human[order(duplicated_human$HGNC.symbol),]
duplicated_human<-m2h_output[(m2h_output$HGNC.symbol %in% duplicated(m2h_output$HGNC.symbol)),]
duplicated_human[order(duplicated_human$HGNC.symbol),]
duplicated(m2h_output$HGNC.symbol)
dup_human_gene<-m2h_output$HGNC.symbol[duplicated(m2h_output$HGNC.symbol)]
dup_human_gene<-unique(m2h_output$HGNC.symbol[duplicated(m2h_output$HGNC.symbol)])
duplicated_human<-m2h_output[m2h_output$HGNC.symbol %in% dup_human_gene,]
duplicated_human[order(duplicated_human$HGNC.symbol),]
m2h_output[m2h_output$HGNC.symbol=="SERPINB3",]
duplicated_human<-duplicated_human[order(duplicated_human$HGNC.symbol),]
View(duplicated_human)
dup_mouse_gene<-unique(m2h_output$MGI.symbol[duplicated(m2h_output$MGI.symbol)])
duplicated_mouse<-m2h_output[m2h_output$MGI.symbol %in% dup_mouse_gene,]
duplicated_mouse<-duplicated_mouse[order(duplicated_mouse$MGI.symbol),]
View(duplicated_mouse)
m2MGI_inputCheck = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = mm10_1_2_0 , mart = mouse, attributesL = c("mgi_symbol"), martL = mouse, uniqueRows=T)
#write.table(m2h_output,file="mm10.1.2.0toHuman.txt")
length(unique(m2MGI_inputCheck$MGI.symbol))
length(unique(m2MGI_inputCheck$MGI.symbol.1))
length(unique(m2MGI_inputCheck$MGI.symbol))
setdiff(m2MGI_inputCheck$MGI.symbol,mm10_1_2_0)
setdiff(mm10_1_2_0,m2MGI_inputCheck$MGI.symbol)
mm10_1_2_0notMGI<-setdiff(mm10_1_2_0,m2MGI_inputCheck$MGI.symbol)
listFilters(mouse, what = c("name", "description"))
m2h_ortholog = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = mm10_1_2_0 , mart = mouse, attributesL = c("Orthologous Human Genes"), martL = mouse, uniqueRows=T)
m2h_ortholog = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = mm10_1_2_0 , mart = mouse, attributesL = c("with_hsapiens_homolog"), martL = mouse, uniqueRows=T)
listAttributes(mouse, what = c("name", "description"))
getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = "Gal3st2c" , mart = mouse, attributesL = c("external_gene_name"), martL = mouse, uniqueRows=T)
getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = "Gal3st2c" , mart = mouse, attributesL = c("external_gene_name","genedb"), martL = mouse, uniqueRows=T)
getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = "Gal3st2c" , mart = mouse, attributesL = c("external_gene_name","entrezgene_id"), martL = mouse, uniqueRows=T)
getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = "Gal3st2c" , mart = mouse, attributesL = c("external_gene_name","entrezgene_id","external_transcript_name"), martL = mouse, uniqueRows=T)
getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = "Gal3st2c" , mart = mouse, attributesL = c("ensembl_gene_id"), martL = mouse, uniqueRows=T)
gene_ensemblID<-read.csv(file="genes.tsv",sep="\t",header=F,stringsAsFactors = F)
View(gene_ensemblID)
gene_ensemblID$V3<-mm10_1_2_0
colnames(gene_ensemblID)<-c("ensemblID","mouseGeneName","mGNameInData")
mEnsemblID_inputCheck = getLDS(attributes = c("ensembl_gene_id"), filters = "ensembl_gene_id", values = gene_ensemblID$ensemblID , mart = mouse, attributesL = c("mgi_symbol"), martL = mouse, uniqueRows=T)
colnames(gene_ensemblID)<-c("Gene.stable.ID","mouseGeneName","mGNameInData")
mouse_gene_info<-left_join(gene_ensemblID,mEnsemblID_inputCheck)
View(mouse_gene_info)
sum(is.na(mouse_gene_info$MGI.symbol))
mouse_gene_info$Gene.stable.ID[is.na(mouse_gene_info$MGI.symbol)]
mouse_gene_info[is.na(mouse_gene_info$MGI.symbol),1:2]
sum(mouse_gene_info$MGI.symbol==mouse_gene_info$mouseGeneName)
sum(identical(mouse_gene_info$MGI.symbol,mouse_gene_info$mouseGeneName))
apply(mouse_gene_info,1,function(x) identical(x[2],x[4]))
apply(mouse_gene_info,1,function(x) identical(x[2],x[4], num.eq = FALSE))
identical(mouse_gene_info[1,2],mouse_gene_info[1,4], num.eq = FALSE)
identical(mouse_gene_info[1,2],mouse_gene_info[1,4])
apply(mouse_gene_info[,c(2,4)],1,function(x) identical(x, num.eq = FALSE))
apply(mouse_gene_info[,c(2,4)],1,function(x) length(unique(x))==1)
mouse_gene_info[!apply(mouse_gene_info[,c(2,4)],1,function(x) length(unique(x))==1),]
mm10_1_2_0inconsisMGI<-mouse_gene_info[!apply(mouse_gene_info[,c(2,4)],1,function(x) length(unique(x))==1),]
m2h_output = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = mouse_gene_info$MGI.symbol , mart = mouse, attributesL = c("hgnc_symbol"), martL = human, uniqueRows=T)
write.table(m2h_output,file="mm10.1.2.0toHuman.txt")
length(unique(paste0(m2h_output$MGI.symbol,m2h_output$HGNC.symbol)))
length(unique(m2h_output$MGI.symbol))
length(unique(m2h_output$HGNC.symbol))
dup_human_gene<-unique(m2h_output$HGNC.symbol[duplicated(m2h_output$HGNC.symbol)]) #815 genes. note that duplicated function will only mark the second (and onward) encounter as duplicated. That is why I need to take unique and extract all encounter in include the "original" encounter.
duplicated_human<-m2h_output[m2h_output$HGNC.symbol %in% dup_human_gene,]
duplicated_human<-duplicated_human[order(duplicated_human$HGNC.symbol),]
View(duplicated_human)
m2h_output[m2h_output$HGNC.symbol=="SERPINB3",]
dup_mouse_gene<-unique(m2h_output$MGI.symbol[duplicated(m2h_output$MGI.symbol)])
duplicated_mouse<-m2h_output[m2h_output$MGI.symbol %in% dup_mouse_gene,]
duplicated_mouse<-duplicated_mouse[order(duplicated_mouse$MGI.symbol),]
setdiff(m2h_output$MGI.symbol,mm10_1_2_0)
length(setdiff(mm10_1_2_0,m2h_output$MGI.symbol))
length(unique(gene_ensemblID$Gene.stable.ID))
length(unique(gene_ensemblID$mouseGeneName))
m2h_output = getLDS(attributes = c("ensembl_gene_id"), filters = "ensembl_gene_id", values = mouse_gene_info$Gene.stable.ID , mart = mouse, attributesL = c("hgnc_symbol"), martL = human, uniqueRows=T)
length(unique(paste0(m2h_output$MGI.symbol,m2h_output$HGNC.symbol)))
length(unique(paste0(m2h_output$Gene.stable.ID,m2h_output$HGNC.symbol)))
write.table(m2h_output,file="mm10.1.2.0toHuman.txt")
length(unique(m2h_output$ensembl_gene_id))
length(unique(m2h_output$Gene.stable.ID))
length(unique(m2h_output$HGNC.symbol))
m2h_convert_geneInfo<-left_join(mouse_gene_info,m2h_output)
View(m2h_convert_geneInfo)
m2h_convert_geneInfo<-left_join(mouse_gene_info,aggregate(HGNC.symbol ~ Gene.stable.ID, data=m2h_output,paste,collapse=","))
View(m2h_convert_geneInfo)
length(unique(m2h_convert_geneInfo$Gene.stable.ID))
dup_convert_ID<-unique(m2h_convert_geneInfo$Gene.stable.ID[duplicated(m2h_convert_geneInfo$Gene.stable.ID)])
duplicated_convert<-m2h_convert_geneInfo[m2h_convert_geneInfo$Gene.stable.ID %in% dup_convert_ID,]
duplicated_convert<-duplicated_convert[order(duplicated_convert$Gene.stable.ID),]
duplicated_convert
dup_convert_gene<-unique(m2h_convert_geneInfo$mouseGeneName[duplicated(m2h_convert_geneInfo$mouseGeneName)])
duplicated_convert_all<-m2h_convert_geneInfo[m2h_convert_geneInfo$mouseGeneName %in% dup_convert_gene,]
duplicated_convert_all<-duplicated_convert_all[order(duplicated_convert$Gene.stable.ID),]
duplicated_convert_all
duplicated_convert_all<-duplicated_convert_all[order(duplicated_convert_all$Gene.stable.ID),]
dup_convert_gene<-unique(m2h_convert_geneInfo$mouseGeneName[duplicated(m2h_convert_geneInfo$mouseGeneName)])
duplicated_convert_all<-m2h_convert_geneInfo[m2h_convert_geneInfo$mouseGeneName %in% dup_convert_gene,]
duplicated_convert_all<-duplicated_convert_all[order(duplicated_convert_all$Gene.stable.ID),]
duplicated_convert_all
duplicated_convert_all<-duplicated_convert_all[order(duplicated_convert_all$mouseGeneName),]
dup_convert_gene<-unique(m2h_convert_geneInfo$mouseGeneName[duplicated(m2h_convert_geneInfo$mouseGeneName)])
duplicated_convert_all<-m2h_convert_geneInfo[m2h_convert_geneInfo$mouseGeneName %in% dup_convert_gene,]
duplicated_convert_all<-duplicated_convert_all[order(duplicated_convert_all$mouseGeneName),]
duplicated_convert_all
dup_convert_gene<-unique(m2h_convert_geneInfo$mouseGeneName[duplicated(m2h_convert_geneInfo$mouseGeneName)])
duplicated_convert_all<-m2h_convert_geneInfo[m2h_convert_geneInfo$mouseGeneName %in% dup_convert_gene,]
duplicated_convert_all<-duplicated_convert_all[order(duplicated_convert_all$mouseGeneName),]
View(duplicated_convert_all)
write.table(m2h_convert_geneInfo,file="mm10.1.2.0toHuman.txt")
dup_ensEMBLID<-unique(mouse_gene_info$Gene.stable.ID[duplicated(mouse_gene_info$Gene.stable.ID)])
dup_ensEMBLID<-unique(mouse_gene_info$Gene.stable.ID[duplicated(mouse_gene_info$Gene.stable.ID)]) dup_item<-mouse_gene_info[mouse_gene_info$Gene.stable.ID %in% dup_ensEMBLID,]
dup_ensEMBLID<-unique(mouse_gene_info$Gene.stable.ID[duplicated(mouse_gene_info$Gene.stable.ID)]) dup_item<-mouse_gene_info[mouse_gene_info$Gene.stable.ID %in% dup_ensEMBLID,]
dup_ensEMBLID<-unique(mouse_gene_info$Gene.stable.ID[duplicated(mouse_gene_info$Gene.stable.ID)]) dup_item<-mouse_gene_info[mouse_gene_info$Gene.stable.ID %in% dup_ensEMBLID,]
dup_ensEMBLID<-unique(mouse_gene_info$Gene.stable.ID[duplicated(mouse_gene_info$Gene.stable.ID)])
dup_item<-mouse_gene_info[mouse_gene_info$Gene.stable.ID %in% dup_ensEMBLID,]
dup_item<-dup_item[order(dup_item$Gene.stable.ID),]
dup_item
dup_convert_gene<-unique(m2h_convert_geneInfo$mouseGeneName[duplicated(m2h_convert_geneInfo$mouseGeneName)])
duplicated_convert_all<-m2h_convert_geneInfo[m2h_convert_geneInfo$mouseGeneName %in% dup_convert_gene,]
duplicated_convert_all<-duplicated_convert_all[order(duplicated_convert_all$mouseGeneName),]
gene_human<-read.csv(file="human_genes.tsv",sep="\t",header=F,stringsAsFactors = F)
sum(unique(m2h_output$HGNC.symbol) %in% gene_human$V1)
setdiff(unique(m2h_output$HGNC.symbol) %in% gene_human$V1)
setdiff(unique(m2h_output$HGNC.symbol),gene_human$V1)
NCBIhuman_gene_info<-read.csv(file="Homo_sapiens.gene_info",header=T,sep="\t")
View(NCBIhuman_gene_info)
setdiff(unique(m2h_output$HGNC.symbol),NCBIhuman_gene_info$Symbol)
listAttributes(mouse, what = c("name", "description"))
listAttributes(human, what = c("name", "description"))
m2h_output = getLDS(attributes = c("ensembl_gene_id"), filters = "ensembl_gene_id", values = mouse_gene_info$Gene.stable.ID , mart = mouse, attributesL = c("hgnc_symbol","hgnc_id"), martL = human, uniqueRows=T)
length(unique(paste0(m2h_output$Gene.stable.ID,m2h_output$HGNC.symbol)))
length(unique(m2h_output$HGNC.symbol))
length(unique(m2h_output$HGNC.ID))
#m2h_convert_geneInfo<-left_join(mouse_gene_info,aggregate(HGNC.symbol ~ Gene.stable.ID, data=m2h_output,paste,collapse=","))
m2h_convert_geneInfo<-left_join(mouse_gene_info,m2h_output)
##write a file:
write.table(m2h_convert_geneInfo,file="mm10.1.2.0toHuman.txt")
length(unique(m2h_convert_geneInfo$Gene.stable.ID))
##write a file:
write.table(m2h_convert_geneInfo,file="mm10.1.2.0toHuman.txt")
gene_human$SearchSymbol<-ifelse(gene_human$V1 %in% NCBIhuman_gene_info$Symbol,gene_human$V1,"NA")
View(gene_human)
NCBI_human_geneAlias<-NCBIhuman_gene_info$Synonyms
NCBI_human_geneAlias<-read.table(text=NCBIhuman_gene_info$Synonyms,sep="|",colClasses = "character")
NCBIhuman_gene_info<-read.csv(file="Homo_sapiens.gene_info",header=T,sep="\t",stringsAsFactors = F)
setdiff(unique(m2h_output$HGNC.symbol),NCBIhuman_gene_info$Symbol)
gene_human$SearchSymbol<-ifelse(gene_human$V1 %in% NCBIhuman_gene_info$Symbol,gene_human$V1,"NA")
NCBI_human_geneAlias<-read.table(text=NCBIhuman_gene_info$Synonyms,sep="|",colClasses = "character")
NCBI_human_geneAlias<-strsplit(NCBIhuman_gene_info$Synonyms,"|")
View(NCBI_human_geneAlias)
NCBI_human_geneAlias<-unlist(strsplit(NCBIhuman_gene_info$Synonyms,"|"))
NCBI_human_geneAlias<-unlist(strsplit(NCBIhuman_gene_info$Synonyms,"[|]"))
NCBI_human_geneAlias<-strsplit(NCBIhuman_gene_info$Synonyms,"[|]")
View(NCBI_human_geneAlias)
NCBI_human_geneAlias[1]
"A1B" %in% NCBI_human_geneAlias[1]
"A1B" %in% unlist(NCBI_human_geneAlias[1])
any(NCBI_human_geneAlias[1]==gene_human$V1)
any(NCBI_human_geneAlias==gene_human$V1)
any(NCBI_human_geneAlias[1]==gene_human$V1[1])
sapply(NCBI_human_geneAlias,any(x==gene_human$V1[76]))
sapply(NCBI_human_geneAlias,function(x) any(x==gene_human$V1[76]))
sum(sapply(NCBI_human_geneAlias,function(x) any(x==gene_human$V1[76])))
NCBIhuman_gene_info[sapply(NCBI_human_geneAlias,function(x) any(x==gene_human$V1[76])),c(3,5,6)]
gene_human$SearchAlias<-ifelse(gene_human$SearchSymbol=="NA" ,NCBIhuman_gene_info[sapply(NCBI_human_geneAlias,function(x) any(x==gene_human$V1)),c(3)],"NA")
test<-apply(gene_human,2,function(y) ifelse(y[3]=="NA" ,NCBIhuman_gene_info[sapply(NCBI_human_geneAlias,function(x) any(x==y[1])),c(3)],"NA"))
test<-apply(gene_human,1,function(y) ifelse(y[3]=="NA" ,NCBIhuman_gene_info[sapply(NCBI_human_geneAlias,function(x) any(x==y[1])),c(3)],"NA"))
gene_human$SearchAlias<-apply(gene_human,1,function(y) ifelse(y[3]=="NA" ,NCBIhuman_gene_info[sapply(NCBI_human_geneAlias,function(x) any(x==y[1])),c(3)],"NA"))
gene_human$SearchAlias<-apply(gene_human,1,function(y) ifelse(is.na(y[3]),NCBIhuman_gene_info[sapply(NCBI_human_geneAlias,function(x) any(x==y[1])),c(3)],"NA"))
sum(test)
sum(is.na(test))
gene_human$SearchAlias<-apply(gene_human,1,function(y) ifelse(strcmp(y[3],"NA"),NCBIhuman_gene_info[sapply(NCBI_human_geneAlias,function(x) any(x==y[1])),c(3)],"NA"))
"a"=="a"
View(gene_human)
gene_human$SearchAlias<-apply(gene_human,1,function(y) ifelse(y[4]=="NA",NCBIhuman_gene_info[sapply(NCBI_human_geneAlias,function(x) any(x==y[1])),c(3)],"NA"))
gene_human$NCBI.Symbol<-ifelse(gene_human$SearchSymbol=="NA",gene_human$SearchAlias,gene_human$SearchSymbol)
NCBI_human_HGNCid<-strsplit(NCBIhuman_gene_info$dbXrefs,"[|]")
View(NCBI_human_HGNCid)
NCBI_human_HGNCid<-strsplit(NCBIhuman_gene_info$dbXrefs,"[HGNC:HGNC:]")
NCBI_human_HGNCid<-strsplit(NCBIhuman_gene_info$dbXrefs,"[HGNC:HGNC:]")
NCBI_human_HGNCid<-strsplit(NCBIhuman_gene_info$dbXrefs,"HGNC:HGNC:")
View(NCBI_human_HGNCid)
NCBI_human_HGNCid<-strsplit(NCBIhuman_gene_info$dbXrefs,"[|]")
View(NCBI_human_HGNCid)
NCBI_human_refs<-strsplit(NCBIhuman_gene_info$dbXrefs,"[|]")
NCBI_human_HGNCid<-lapply(NCBI_human_refs,function(x) x[startsWith(x,"HGNC")])
View(NCBI_human_HGNCid)
NCBI_human_HGNCid<-lapply(NCBI_human_refs,function(x) x[[startsWith(x,"HGNC")]])
startsWith(NCBI_human_refs[1],"HGNC")
View(NCBI_human_refs)
startsWith(NCBI_human_refs[[1]],"HGNC")
NCBI_human_refs[[startsWith(NCBI_human_refs[[1]],"HGNC")]]
NCBI_human_refs[[1]][startsWith(NCBI_human_refs[[1]],"HGNC")]
NCBI_human_HGNCid<-lapply(NCBI_human_refs,function(x) x[startsWith(x,"HGNC")])
View(NCBI_human_HGNCid)
View(NCBIhuman_gene_info)
NCBIhuman_gene_info$Symbol==NCBIhuman_gene_info$Symbol_from_nomenclature_authority
sum(NCBIhuman_gene_info$Symbol==NCBIhuman_gene_info$Symbol_from_nomenclature_authority)
setdiff(unique(m2h_output$HGNC.symbol),NCBIhuman_gene_info$Symbol_from_nomenclature_authority)
gene_human$rowNumInNCBI<-lapply(gene_human$V1,function (x) which(NCBIhuman_gene_info$Symbol == x,))
View(gene_human)
gene_human$rowNumInNCBI_alias<-apply(gene_human,1,function(y) ifelse(length(y$rowNumInNCBI)==0,which(sapply(NCBI_human_geneAlias,function(x) any(x==y[1]))),))
gene_human$rowNumInNCBI_alias[length(gene_human$rowNumInNCBI)==0]<-apply(gene_human[length(gene_human$rowNumInNCBI)==0,],1,function(y) which(sapply(NCBI_human_geneAlias,function(x) any(x==y[1]))))
sum(length(gene_human$rowNumInNCBI)==0)
sum(gene_human$rowNumInNCBI==integer(0))
sum(is.integer0(gene_human$rowNumInNCBI))
is.integer0 <- function(x)
{
is.integer(x) && length(x) == 0L
}
sum(is.integer0(gene_human$rowNumInNCBI))
sum(identical(gene_human$rowNumInNCBI,integer(0)))
gene_human$rowNumInNCBI<-lapply(gene_human$V1,function (x) unlist(which(NCBIhuman_gene_info$Symbol == x,)))
rowNumInNCBI<-lapply(gene_human$V1,function (x) which(NCBIhuman_gene_info$Symbol == x))
gene_human$rowNumInNCBI<-unlist(rowNumInNCBI)
gene_human$rowNumInNCBI<-as.vector(unlist(rowNumInNCBI))
sum(identical(rowNumInNCBI,integer(0)))
sum(identical(unlist(rowNumInNCBI),integer(0)))
gene_human$rowNumInNCBI<-unlist(rowNumInNCBI[sapply(rowNumInNCBI,function(x) length(x)==0)]<-NA)
rowNumInNCBI<-lapply(gene_human$V1,function (x) which(NCBIhuman_gene_info$Symbol == x))
rowNumInNCBI[sapply(rowNumInNCBI,function(x) length(x)==0)]<-NA
gene_human$rowNumInNCBI<-unlist(rowNumInNCBI)
sum(is.na(rowNumInNCBI))
sum(length(rowNumInNCBI)>1)
rowNumInNCBI[(length(rowNumInNCBI)>1)]
rowNumInNCBI[[(length(rowNumInNCBI)>1)]]
rowNumInNCBI[sapply(rowNumInNCBI,function(x) length(x)>1)]
NCBIhuman_gene_info[c(2503,30962),]
NCBIhuman_gene_info[c(6258,11588),]
NCBIhuman_gene_info[NCBIhuman_gene_info$Symbol %in% duplicated(NCBIhuman_gene_info$Symbol),]
duplicated(NCBIhuman_gene_info$Symbol)
NCBIhuman_gene_info[NCBIhuman_gene_info$Symbol %in% NCBIhuman_gene_info$Symbol[duplicated(NCBIhuman_gene_info$Symbol)],]
NCBIhuman_gene_info[NCBIhuman_gene_info$Symbol %in% NCBIhuman_gene_info$Symbol[duplicated(NCBIhuman_gene_info$Symbol)],] %>% arrange(Symbol)
NCBIhuman_gene_info[NCBIhuman_gene_info$Symbol %in% NCBIhuman_gene_info$Symbol[duplicated(NCBIhuman_gene_info$Symbol)],] %>% arrange(Symbol) %>% select(Symbol,Synonyms,dbXrefs,Symbol_from_nonmenclature_authority,Nomenclature_status)
NCBIhuman_gene_info[NCBIhuman_gene_info$Symbol %in% NCBIhuman_gene_info$Symbol[duplicated(NCBIhuman_gene_info$Symbol)],] %>% arrange(Symbol) %>% select(Symbol,Synonyms,dbXrefs,Symbol_from_nomenclature_authority,Nomenclature_status)
NCBIhuman_gene_info[NCBIhuman_gene_info$Symbol %in% NCBIhuman_gene_info$Symbol[duplicated(NCBIhuman_gene_info$Symbol)],] %>% arrange(Symbol) %>% select(Symbol,dbXrefs,Symbol_from_nomenclature_authority,Nomenclature_status)
NCBIhuman_gene_info[NCBIhuman_gene_info$Symbol %in% NCBIhuman_gene_info$Symbol[duplicated(NCBIhuman_gene_info$Symbol)],] %>% arrange(Symbol) %>% select(Symbol,Symbol_from_nomenclature_authority,Nomenclature_status)
NCBIhuman_gene_info[NCBIhuman_gene_info$Symbol=="NOME1",]
NCBIhuman_gene_info[NCBIhuman_gene_info$Symbol=="MEMO1",]
sum(duplicated(NCBIhuman_gene_info$Symbol_from_nomenclature_authority))
length(duplicated(NCBIhuman_gene_info$Symbol_from_nomenclature_authority))
sum(duplicated(NCBIhuman_gene_info$Symbol_from_nomenclature_authority) & NCBIhuman_gene_info$Symbol_from_nomenclature_authority!="-")
length(NCBIhuman_gene_info$Symbol_from_nomenclature_authority!="-")
length(!(NCBIhuman_gene_info$Symbol_from_nomenclature_authority=="-"))
sum(!(NCBIhuman_gene_info$Symbol_from_nomenclature_authority=="-"))
NCBIhuman_gene_info[duplicated(NCBIhuman_gene_info$Symbol_from_nomenclature_authority) & NCBIhuman_gene_info$Symbol_from_nomenclature_authority!="-"]
NCBIhuman_gene_info[duplicated(NCBIhuman_gene_info$Symbol_from_nomenclature_authority) & NCBIhuman_gene_info$Symbol_from_nomenclature_authority=="-"]
NCBIhuman_gene_info[(duplicated(NCBIhuman_gene_info$Symbol_from_nomenclature_authority) & NCBIhuman_gene_info$Symbol_from_nomenclature_authority=="-"),]
NCBIhuman_gene_info[duplicated(NCBIhuman_gene_info$Symbol_from_nomenclature_authority) & NCBIhuman_gene_info$Symbol_from_nomenclature_authority=="-",]
NCBIhuman_gene_info[duplicated(NCBIhuman_gene_info$Symbol_from_nomenclature_authority) & !(NCBIhuman_gene_info$Symbol_from_nomenclature_authority=="-"),]
rowNumInNCBI<-lapply(gene_human$V1,function (x) which(NCBIhuman_gene_info$Symbol_from_nomenclature_authority == x))
rowNumInNCBI[sapply(rowNumInNCBI,function(x) length(x)==0)]<-NA
rowNumInNCBI[sapply(rowNumInNCBI,function(x) length(x)>1)]
# rowNumInNCBI[sapply(rowNumInNCBI,function(x) length(x)>1)] #this returns an empty list, meaning that there is indeed no duplication in the match: each gene_human_V1 at most matches to 1 row in NCBIhuman_gene_info by Symbol_from_nomenclature_authority.
gene_human$rowNumInNCBI<-unlist(rowNumInNCBI)
gene_human$rowNumInNCBI_alias[is.na(gene_human$rowNumInNCBI)]<-
rowNumInNCBI_alias<-apply(gene_human[is.na(gene_human$rowNumInNCBI),],1,function(y) which(sapply(NCBI_human_geneAlias,function(x) any(x==y[1]))))
rowNumInNCBI_alias<-apply(gene_human[is.na(gene_human$rowNumInNCBI),],1,function(y) which(sapply(NCBI_human_geneAlias,function(x) any(x==y[1]))))
rowNumInNCBI_alias[sapply(rowNumInNCBI_alias,function(x) length(x)>1)]
NCBIhuman_gene_info[rowNumInNCBI_alias[sapply(rowNumInNCBI_alias,function(x) length(x)>1)]]
NCBIhuman_gene_info[rowNumInNCBI_alias[sapply(rowNumInNCBI_alias,function(x) length(x)>1)],]
NCBIhuman_gene_info[unlist(rowNumInNCBI_alias[sapply(rowNumInNCBI_alias,function(x) length(x)>1))],]
NCBIhuman_gene_info[unlist(rowNumInNCBI_alias[sapply(rowNumInNCBI_alias,function(x) length(x)>1)]),]
NCBIhuman_gene_info[unlist(rowNumInNCBI_alias[sapply(rowNumInNCBI_alias,function(x) length(x)>1)]),] %>% select(Synonyms,Symbol_from_nomenclature_authority)
NCBIhuman_gene_info[unlist(rowNumInNCBI_alias[sapply(rowNumInNCBI_alias,function(x) length(x)>1)]),c(5,11)]
gene_human[sapply(rowNumInNCBI_alias,function(x) length(x)>1),1]
gene_human[is.na(gene_human$rowNumInNCBI)][sapply(rowNumInNCBI_alias,function(x) length(x)>1),1]
gene_human[is.na(gene_human$rowNumInNCBI)][sapply(rowNumInNCBI_alias,function(x) length(x)>1)]
gene_human[is.na(gene_human$rowNumInNCBI),][sapply(rowNumInNCBI_alias,function(x) length(x)>1),1]
rowNumInNCBI_alias %in% gene_human$rowNumInNCBI
sum(rowNumInNCBI_alias %in% gene_human$rowNumInNCBI)
rowNumInNCBI_alias[rowNumInNCBI_alias %in% gene_human$rowNumInNCBI]
gene_human[is.na(gene_human$rowNumInNCBI),][rowNumInNCBI_alias %in% gene_human$rowNumInNCBI]
gene_human[is.na(gene_human$rowNumInNCBI),][rowNumInNCBI_alias %in% gene_human$rowNumInNCBI,1]
gene_human$rowNumInNCBI_alias[is.na(gene_human$rowNumInNCBI)]<-unlist(rowNumInNCBI_alias,recursive = F)
gene_human$rowNumInNCBI_alias<-unlist(rowNumInNCBI_alias,recursive = F)
sum(is.na(gene_human$rowNumInNCBI))
gene_human$rowNumInNCBI_alias[is.na(gene_human$rowNumInNCBI)]<-unlist(rowNumInNCBI_alias,recursive = F)
rowNumInNCBI_alias[sapply(rowNumInNCBI_alias,function(x) length(x)==0)]<-NA
gene_human$rowNumInNCBI_alias[is.na(gene_human$rowNumInNCBI)]<-unlist(rowNumInNCBI_alias,recursive = F)
gene_human$rowNumInNCBI_alias[is.na(gene_human$rowNumInNCBI)]<-rowNumInNCBI_alias
!(NCBIhuman_gene_info$Symbol==NCBIhuman_gene_info$Symbol_from_nomenclature_authority)
sum(!(NCBIhuman_gene_info$Symbol==NCBIhuman_gene_info$Symbol_from_nomenclature_authority))
View(NCBI_human_HGNCid)
sum(sapply(NCBI_human_HGNCid,function(x) length(x)==1))
sum(sapply(NCBI_human_HGNCid,function(x) length(x)>1))
sum(sapply(NCBI_human_HGNCid,function(x) length(x)<1))
sum(sapply(NCBI_human_HGNCid,function(x) length(x)==0))
NCBI_human_HGNCid[sapply(NCBI_human_HGNCid,function(x) length(x)==0)]<-NA
sum(sapply(NCBI_human_HGNCid,is.na))
gsub("NGNC:HGNC:","HGNC:",NCBI_human_HGNCid)
NCBI_human_HGNCid<-gsub("NGNC:HGNC:","HGNC:",NCBI_human_HGNCid)
NCBI_human_HGNCid<-gsub("HGNC:HGNC:","HGNC:",NCBI_human_HGNCid)
NCBI_human_HGNCid[sapply(NCBI_human_HGNCid,function(x) length(x)>1)]
NCBIhuman_gene_info$HGNC.ID<-NCBI_human_HGNCid
sum(sapply(NCBI_human_HGNCid,is.na)) #returns nothing. So each row only has at most one HGNC id as espected
sum(sapply(NCBI_human_HGNCid,is.na))
sum(sapply(NCBI_human_HGNCid,function(x) x=="NA"))
gene_human$HGNC.ID<-apply(gene_human,1,function(x) NCBIhuman_gene_info$HGNC.ID[c(x$rowNumInNCBI)])
gene_human$HGNC.ID<-apply(gene_human,1,function(x) NCBIhuman_gene_info$HGNC.ID[c(x$rowNumInNCBI,x$rowNumInNCBI_alias)])
gene_human$HGNC.ID<-gsub("NA","",gene_human$HGNC.ID)
length(gene_human$HGNC.ID[1])
length(gene_human$HGNC.ID[15])
gene_human$HGNC.ID<-supply(gene_human$HGNC.ID,function(x) x[x !="NA"])
gene_human$HGNC.ID<-sapply(gene_human$HGNC.ID,function(x) x[x !="NA"])
gene_human$HGNC.ID<-apply(gene_human,1,function(x) NCBIhuman_gene_info$HGNC.ID[c(x$rowNumInNCBI,x$rowNumInNCBI_alias)])
gene_human$HGNC.ID<-sapply(gene_human$HGNC.ID,function(x) x[x !="NA"])
gene_human$HGNC.ID<-sapply(gene_human$HGNC.ID,function(x) x[x !=NA])
gene_human$HGNC.ID<-apply(gene_human,1,function(x) NCBIhuman_gene_info$HGNC.ID[c(x$rowNumInNCBI,x$rowNumInNCBI_alias)])
gene_human$HGNC.ID<-sapply(gene_human$HGNC.ID,function(x) x[-(which(sapply(x,is.na)))])
gene_human[sapply(gene_human$HGNC.ID,function(x) length(x)>1),]
sum(gene_human$V2==gene_human$V1)
View(m2h_output)
merge_m2h<-merge(m2h_output,gene_human)
View(merge_m2h)
merge_m2h<-merge(merge_m2h,gene_ensemblID)
sum(duplicated(merge_m2h[c(13,4),]))
write.table(merge_m2h[c(12,13,1,2,4),],file="m_h_HomoloPair.txt")
write.table(merge_m2h[,c(12,13,1,2,4)],file="m_h_HomoloPair.txt")
length(gene_ensemblID$Gene.stable.ID)
mouse_gene_info[is.na(mouse_gene_info$MGI.symbol),1:4]
mouse_gene_info[is.na(mouse_gene_info$MGI.symbol),]
